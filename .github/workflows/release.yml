name: Build and Release Server

on:
  push:
    tags:
      - "v*.*.*" # Runs when a version tag (e.g., v1.0.0) is pushed
  workflow_dispatch: # Allows manual trigger from GitHub UI

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: macos-latest
    strategy:
      matrix:
        target:
          - aarch64-apple-darwin
          - x86_64-apple-darwin
          - aarch64-unknown-linux-gnu
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-gnu

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          os: macos-latest
          target: ${{matrix.target}}
          token: "${{ github.token }}"
          # cargo_bins: wasm-bindgen-cli

      - name: Build Server
        env:
          DIOXUS_LOG: trace
        run: dx bundle --fullstack --release --out-dir dist --server-target ${{matrix.target}} --trace -- -vv

      - name: Create Archives
        run: |
          mkdir -p artifacts
          if ${{!contains(matrix.target, 'windows')}}; then
            tar -czvf artifacts/tsto_server-${{matrix.target}}.tar.gz -C dist .
          else
            mv dist/server dist/server.exe
            zip -r artifacts/tsto_server-${{matrix.target}}.zip dist/*
          fi

      - name: Upload *nix Archives
        if: ${{!contains(matrix.target, 'windows')}}
        uses: actions/upload-artifact@v4
        with:
          name: tsto_server-${{matrix.target}}
          path: artifacts/tsto_server-${{matrix.target}}.tar.gz

      - name: Upload Windows Archive
        if: ${{contains(matrix.target, 'windows')}}
        uses: actions/upload-artifact@v4
        with:
          name: tsto_server-${{matrix.target}}
          path: artifacts/tsto_server-${{matrix.target}}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          draft: false
          prerelease: false
